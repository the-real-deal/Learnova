
<MudThemeProvider @ref=@themeProvider Theme="@learnovaTheme" ObserveSystemThemeChange="true"></MudThemeProvider>
@code {

	private MudThemeProvider? themeProvider = new MudThemeProvider();


	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await themeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
			StateHasChanged();
		}
	}
	private Task OnSystemPreferenceChanged(bool newValue)
	{
		themeProvider.IsDarkMode = newValue;
		StateHasChanged();
		return Task.CompletedTask;
	}

	private MudTheme learnovaTheme = new MudTheme()
		{
			PaletteLight = new PaletteLight()
			{
				Primary = Colors.LightBlue.Default,
				Secondary = Colors.Amber.Default,
				Tertiary = Colors.LightBlue.Darken1,
				Background = Colors.Gray.Lighten5,
				AppbarBackground=Colors.LightBlue.Default

			},
			PaletteDark = new PaletteDark()
			{
				Primary = Colors.LightBlue.Lighten1,
				Secondary = Colors.LightBlue.Default,
				Tertiary = Colors.LightBlue.Darken2,
				Surface = Colors.Gray.Lighten3,
				Background = Colors.Gray.Lighten5,
				TextPrimary = Colors.Shades.Black,
				TextSecondary = Colors.Shades.White,
				AppbarBackground=Colors.LightBlue.Darken4,
				DrawerBackground = Colors.LightBlue.Darken4,
				Divider = Colors.Shades.Black,
				
				
				
			}


	};
	public bool isDarkMode()
	{
		
		return this.themeProvider.IsDarkMode;
	}
	public void ToggleDarkMode()
	{
		this.themeProvider.IsDarkMode = !isDarkMode();
	}

}
